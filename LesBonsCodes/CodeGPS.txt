#include <Adafruit_GPS.h>
#define RXD2 16
#define TXD2 17
#define GPSSerial Serial2
#define GPSECHO false



uint32_t timer = millis();
Adafruit_GPS GPS(&GPSSerial);

void setup() {
  Serial.begin(115200);
  GPS.begin(9600);
  GPS.sendCommand(PMTK_SET_NMEA_OUTPUT_RMCGGA);
  GPS.sendCommand(PMTK_SET_NMEA_OUTPUT_RMCONLY);
  GPS.sendCommand(PMTK_SET_NMEA_UPDATE_5HZ);
  GPS.sendCommand(PGCMD_ANTENNA);
  delay(5000);
  GPSSerial.println(PMTK_Q_RELEASE);
  

}

void loop() {
  // put your main code here, to run repeatedly:

  char c = GPS.read();
  if (GPSECHO)
    if (c) Serial.print(c);


  if (GPS.newNMEAreceived()) {
    //Serial.print(GPS.lastNMEA());
    if (!GPS.parse(GPS.lastNMEA())) 
      return;
    }
  

  if (millis() - timer > 2000) {
    timer = millis(); // reset the timer
    Serial.print("\nTime: ");
    if (GPS.hour < 10) { Serial.print('0'); }
    Serial.print(GPS.hour, DEC); Serial.print(':');
    if (GPS.minute < 10) { Serial.print('0'); }
    Serial.print(GPS.minute, DEC); Serial.print(':');
    if (GPS.seconds < 10) { Serial.print('0'); }
    Serial.print(GPS.seconds, DEC); Serial.print('.');
    if (GPS.milliseconds < 10) {
      Serial.print("00");
    } else if (GPS.milliseconds > 9 && GPS.milliseconds < 100) {
      Serial.print("0");
    }
    Serial.println(GPS.milliseconds);
    Serial.print("Date: ");
    Serial.print(GPS.day, DEC); Serial.print('/');
    Serial.print(GPS.month, DEC); Serial.print("/20");
    Serial.println(GPS.year, DEC);
    Serial.print("Fix: "); Serial.print((int)GPS.fix);
    Serial.print(" quality: "); Serial.println((int)GPS.fixquality);
    
    if (GPS.fix) {
      Serial.print("Location: ");
      Serial.print(GPS.latitudeDegrees, 4); Serial.print(GPS.latitudeDegrees);
      Serial.print(", ");
      Serial.print(GPS.longitudeDegrees, 4); Serial.println(GPS.longitudeDegrees);
      Serial.print("Speed (knots): "); Serial.println(GPS.speed);
      Serial.print("Altitude: "); Serial.println(GPS.altitude);
      Serial.print("Satellites: "); Serial.println((int)GPS.satellites);
      Serial.print("Antenna status: "); Serial.println((int)GPS.antenna); */
      Serial.print("Spd: ");
      float mph;
      mph = (GPS.speed) * 1.15;
      Serial.println(mph);
    } 
    else {
      Serial.print("No Signal");
    }
    
  }
}